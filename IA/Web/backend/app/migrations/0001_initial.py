# Generated by Django 2.1.14 on 2020-04-11 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=15)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DimTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900)])),
                ('month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('day', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('hour', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('day_of_week', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('period_of_day', models.IntegerField(choices=[(0, 'EARLY_MORNING'), (1, 'MORNING'), (2, 'NOON'), (3, 'EVE'), (4, 'NIGHT'), (5, 'LATE_NIGHT')])),
                ('cost', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Cost')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unix_time', models.BigIntegerField()),
                ('duration', models.FloatField()),
                ('watts1', models.FloatField()),
                ('watts2', models.FloatField()),
                ('watts3', models.FloatField()),
                ('watts_total', models.FloatField()),
                ('sensor_to_convert', models.FloatField()),
                ('dim_time', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='app.DimTime')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sensor_type', models.IntegerField(choices=[(1, 'ENERGY_LOG')])),
                ('name', models.CharField(max_length=50)),
                ('time_zone', models.TextField(default='America/Recife', max_length=200)),
                ('default_to_convert', models.FloatField(default=26.378)),
                ('log_duration_mode', models.FloatField(default=14.0)),
                ('secret_api_token', models.UUIDField(default=uuid.uuid4)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensorLogBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_api_token', models.UUIDField()),
                ('content', models.TextField(blank=True, default='1574608324;1;2;3')),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('exception', models.TextField(blank=True, default='')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sensor')),
            ],
        ),
        migrations.AddField(
            model_name='energylog',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sensor'),
        ),
        migrations.AddField(
            model_name='dimtime',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sensor'),
        ),
        migrations.AddField(
            model_name='cost',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sensor'),
        ),
        migrations.AlterUniqueTogether(
            name='energylog',
            unique_together={('sensor', 'unix_time')},
        ),
        migrations.AlterUniqueTogether(
            name='dimtime',
            unique_together={('sensor', 'date_time')},
        ),
    ]
